import gmpy2
from gmpy2 import mpz

#Compute hash table for left and right side
hash_table_left = {} 
table_table_right = {}

p = mpz('174807157365465092731323561678522236549173502913317875393564963123330281052524687450754910240009920154525635325209526987433833785499384204819179549544106498491589834195860008906875039418684191252537604123129659746721614402346449135195832955793815709136053198207712511838753919608894095907732099313139446299843')
g = mpz('41899070570517490692126143234857256603477072005476801644745865627893958675820606802876173648371028044404957307185876963051595214534530501331532626624926034521316281025445575243636197258111995884364277423716373007329751928366973332463469104730271236078593527144954324116802080620822212777139186990364810367977')
y = mpz('346092660424246394691114479533798725480076809461251184479014121920179425419260399743687911301142503637460539471678388004926439364100215402391675865845417477840258810234720723558686752847050059504665331899748572843710832284883486445244146303931743534522546500963697219773020179537502388415720763754385046122')


A = gmpy2.powmod(2, 20, p)
rep_code = gmpy2.powmod(g, A, p)
 
#Right hand side
for i in range(2**20):
	val = gmpy2.powmod(rep_code, i, p)
	table_table_right[val] = i


#Build left hand side
for i in range(2**20):
	exp = gmpy2.powmod(g, i, p)
	val = gmpy2.divm(y, exp, p)
	hash_table_left[val] = i


#Check for matches
for i in hash_table_left.keys():
	if i in table_table_right:
		x_left = mpz(str(hash_table_left[i]))
		x_right = mpz(str(table_table_right[i]))

		x = gmpy2.mul(A, x_right)
		x = gmpy2.add(x, x_left)
		print "Value of x: " + str(x)
		break