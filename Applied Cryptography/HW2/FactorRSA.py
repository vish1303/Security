
import gmpy2

gmpy2.get_context().precision = 1100000

# 5a
def RSA_factor1():
    
    n= 21639472173435216514966277192112338394585770790611623485084657038839759167618076692248319444960304887535087584103301394588416884828859133440554703615822555857180724065447681562217534501105262699290028782912360731532131358071191166807391518837769933803950872347756303383032405482954871817279795412975783004428002167374151137417600372775009121402043733587565888870642823258515257152102497547766930067912206528012195566664636931713131863736497019618008384858768044516999521207986884152390041768704243329529076869272982685619138780295735344151681245480257709099686462231429184520813744694955971193197460361366973633842633
    print "Solution for Question 5a\n"
    assert n % 2 != 0
    n = gmpy2.mpfr(n)
    a = gmpy2.sqrt(n)
    a = gmpy2.ceil(a)
    x = gmpy2.sqrt(gmpy2.sub(gmpy2.mul(a, a), (n)))
    x = gmpy2.ceil(x)
    p = gmpy2.sub(a,x)
    p = gmpy2.ceil(p)
    q = gmpy2.add(a,x)
    q = gmpy2.ceil(q)
    isprime(n,p,q)
def RSA_factor2():
    n = 81991444143945857
    print "Solution for Question 5b \n"
    a = gmpy2.sqrt(n)
    a = gmpy2.ceil(a)
    q = 0
    p = 0
    while not isprime(n, p, q):
        a2 = pow(a, 2)
        assert a2 > n
        x = gmpy2.sqrt(gmpy2.sub(a2, n))
        p = gmpy2.sub(a, x)
        q = gmpy2.add(a, x)
        assert n == gmpy2.mul(p, q)
        a += 1
        
def RSA_factor3():
    n= 1541336941882116076668159370541880159932602198220326213755163674447239776234464214952263278854655074606132109774768915403683422341767560787534983706682370003517275900500787265410563604547563366698462926967575274772904712129777352398282894856458647789997031670002603773951251265615768693075001997006578270384843834554186844964119407620984049549368019248746475146040201975916762287111188655724525398594217779320806970039681014520944149642651439772769245807220965262595123549469830236719711488249642599588761228511099492497099699140735372396264074809454084260072571209685527482903424251724310558191990536981383216868771
    print "Solution for Question 5c \n"
    assert n % 2 != 0
    n = gmpy2.mpfr(n)
    a = gmpy2.sqrt(gmpy2.mul(6, n))
    a = gmpy2.ceil(gmpy2.mul(2, a))
    x = gmpy2.sqrt(gmpy2.sub(gmpy2.mul(a, a), gmpy2.mul(n, 24)))
    x = gmpy2.ceil(x)
    p = gmpy2.sub(a,x)
    p = gmpy2.div(p,6)
    p = gmpy2.ceil(p)
    q = gmpy2.add(a,x)
    q = gmpy2.div(q,4)
    q = gmpy2.ceil(q)
    isprime(n,p,q)

def isprime(N, p, q):
    g = gmpy2.is_prime(int(p)) and gmpy2.is_prime(int(q)) \
        and N == gmpy2.mul(p, q)
    if g:
        print   "N Value is: ",gmpy2.mul(p,q)
        print "p is :" ,long(p)
        print "q is:" ,long(q)
	
	print "------------------------------------------------------------------------------------------"

		
    return g

	
	
if __name__ == '__main__':
    RSA_factor1()
    RSA_factor2()
    RSA_factor3()